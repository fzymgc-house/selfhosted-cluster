---
description: General project rules and principles for the self-hosted Kubernetes cluster
globs: ["**/*"]
alwaysApply: true
---

# Self-Hosted Kubernetes Cluster - General Rules

## Core Principles
- **GitOps First**: All infrastructure changes through Git, no manual cluster modifications
- **Security by Default**: Vault for secrets, mTLS, RBAC everywhere
- **High Availability**: 3+ replicas, anti-affinity rules
- **Observability**: Metrics, logs, and dashboards for everything
- **Automation**: Prefer automated over manual processes

## Code Style & Naming
- Use explicit, descriptive names for all resources
- Comments should explain "why" not "what"
- Keep functions/tasks focused on a single responsibility
- Follow existing patterns in the codebase
- Add SPDX license identifiers where appropriate

## Naming Conventions
- **Kubernetes**: Use kebab-case for resource names
- **Ansible**: Use snake_case for variables
- **Terraform**: Use underscore_separated for resource names
- **Files**: Use descriptive names, group related resources

## Git Workflow
1. Feature branches for all changes
2. Pull requests required for main branch
3. Descriptive commit messages following conventional commits
4. Test changes in development before production
5. FluxCD automatically deploys merged changes

## Documentation
- Update README when adding new components
- Document non-obvious configuration choices
- Include examples for complex features
- Keep documentation close to the code

## Testing & Validation
- Validate YAML syntax before committing
- Test Ansible playbooks with `--check` flag first
- Verify Terraform plans before applying
- Check FluxCD reconciliation after deployments

## Dependencies
- Use Renovate for automated dependency updates
- Group related dependencies in renovate.json
- Disable major version updates by default
- Auto-merge minor and patch updates after testing
