# SPDX-License-Identifier: MIT-0
# code: language=ansible

- name: Create Argo CD namespace
  kubernetes.core.k8s:
    kubeconfig: "/Users/sean/.kube/configs/{{ k8s_context }}-admin.yml"
    state: present
    definition:
      kind: Namespace
      apiVersion: v1
      metadata:
        name: argocd
  become: false
  run_once: true
  delegate_to: localhost

- name: Create argocd-oidc-secret
  kubernetes.core.k8s:
    kubeconfig: "/Users/sean/.kube/configs/{{ k8s_context }}-admin.yml"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: argocd-oidc-secret
        namespace: argocd
        labels:
          app.kubernetes.io/part-of: argocd
      type: Opaque
      stringData:
        authentik.client_id: "{{ lookup('community.general.onepassword', 'Fzymgc ArgoCD', vault='fzymgc-house', field='authentik_client_id') }}"
        authentik.client_secret: "{{ lookup('community.general.onepassword', 'Fzymgc ArgoCD', vault='fzymgc-house', field='authentik_client_secret') }}"
  become: false
  run_once: true
  delegate_to: localhost

- name: Create argocd repo secret
  kubernetes.core.k8s:
    kubeconfig: "/Users/sean/.kube/configs/{{ k8s_context }}-admin.yml"
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: argocd-selfhosted-repo
        namespace: argocd
        labels:
          argocd.argoproj.io/secret-type: repository
      type: Opaque
      stringData:
        name: selfhosted-cluster
        project: default
        type: git
        url: https://github.com/fzymgc-house/selfhosted-cluster
        githubAppID: "1759545"
        githubAppInstallationID: "80236294"
        githubAppPrivateKey: "{{ lookup('community.general.onepassword', 'Fzymgc ArgoCD', vault='fzymgc-house', field='github_app_private_key') | b64decode }}"
  become: false
  run_once: true
  delegate_to: localhost

- name: Create argocd secret
  kubernetes.core.k8s:
    kubeconfig: "/Users/sean/.kube/configs/{{ k8s_context }}-admin.yml"
    state: present
    definition:
      kind: ExternalSecret
      apiVersion: external-secrets.io/v1
      metadata:
        name: argocd-secret
        namespace: argocd
      spec:
        secretStoreRef:
          name: vault
          kind: ClusterSecretStore
        target:
          name: argocd-secret
          creationPolicy: Owner
          deletionPolicy: Delete
          template:
            type: Opaque
            data:
              admin.password: "{{ '{{ .admin_password | b64enc}}' }}"
              admin.passwordMtime: "{{ '{{ .admin_password_mtime | b64enc}}' }}"
              server.secretkey: "{{ '{{ .server_secret_key | b64enc}}' }}"
              webhook.github.secret: "{{ '{{ .webhook_github_secret | b64enc }}' }}"
        data:
          - secretKey: admin_password
            remoteRef:
              key: fzymgc-house/cluster/argocd
              property: admin.password
          - secretKey: admin_password_mtime
            remoteRef:
              key: fzymgc-house/cluster/argocd
              property: admin.password_mtime
          - secretKey: server_secret_key
            remoteRef:
              key: fzymgc-house/cluster/argocd
              property: server.secretkey
          - secretKey: webhook_github_secret
            remoteRef:
              key: fzymgc-house/cluster/argocd
              property: webhook.github.secret
  become: false
  run_once: true
  delegate_to: localhost


- name: Install Argo CD
  kubernetes.core.helm:
    kubeconfig: "/Users/sean/.kube/configs/{{ k8s_context }}-admin.yml"
    namespace: argocd
    name: argocd
    state: present
    chart_ref: argo-cd
    chart_repo_url: https://argoproj.github.io/argo-helm
    wait: false
    chart_version: 8.3.0
    values:
      global:
        domain: argocd.fzymgc.house
        image:
          tag: v3.1.1
      configs:
        cm:
          url: https://argocd.fzymgc.house
          dex.config: |
            connectors:
              - type: oidc
                id: oidc
                name: oidc
                config:
                  issuer: https://auth.fzymgc.house/application/o/argo-cd/
                  clientID: $argocd-oidc-secret:authentik.client_id
                  clientSecret: $argocd-oidc-secret:authentik.client_secret
                  # tokenURL: https://auth.fzymgc.house/application/o/token/
                  # authorizationURL: https://auth.fzymgc.house/application/o/authorize/
                  # userInfoURL: https://auth.fzymgc.house/application/o/userinfo/
                  rootCAs:
                    - {{ lookup('community.general.onepassword', 'fzymgc-ica1-ca', vault='fzymgc-house', field='fullchain') | b64encode }}
                  insecureEnableGroups: true
                  scopes:
                    - email
                    - openid
                    - profile
                    - groups
                  getUserInfo: true
                  claimMapping:
                    groups: groups
        params:
          server.insecure: true
        rbac:
          policy.csv: |
            g, argocd-admin, role:admin
            g, argocd-user, role:readonly
        secret:
          create: false
      certificate:
        enabled: true
      redis-ha:
        enabled: true
      controller:
        replicas: 1
      server:
        replicas: 2
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: fzymgc-house-issuer
          extraTls:
            - hosts:
                - argocd.fzymgc.house
              secretName: argocd-tls
      repoServer:
        replicas: 2
      applicationSet:
        replicas: 2
  become: false
  run_once: true
  delegate_to: localhost
  tags:
    - k8s-argocd-install

- name: Create App of Apps Application
  kubernetes.core.k8s:
    kubeconfig: "/Users/sean/.kube/configs/{{ k8s_context }}-admin.yml"
    state: present
    definition:
      kind: Application
      apiVersion: argoproj.io/v1alpha1
      metadata:
        name: cluster-app
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://github.com/fzymgc-house/selfhosted-cluster
          targetRevision: HEAD
          path: argocd/cluster-app
        destination:
          server: https://kubernetes.default.svc
          namespace: argocd
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - ServerSideApply=true
  become: false
  run_once: true
  delegate_to: localhost
