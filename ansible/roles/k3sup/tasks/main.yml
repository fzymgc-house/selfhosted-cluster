# SPDX-License-Identifier: MIT-0
# code: language=ansible
---
# tasks file for k3sup
- name: Setup storage for k3s
  ansible.builtin.import_tasks: storage.yml
  tags:
    - k3s-storage

- name: Install required packages
  ansible.builtin.package:
    name: "{{ k3sup_packages }}"
    state: present
  tags:
    - open-iscsi

- name: Enable and start open-iscsi service
  ansible.builtin.systemd:
    name: iscsid
    state: started
    enabled: true
  tags:
    - open-iscsi

- name: Template k3sup-plan.json
  ansible.builtin.template:
    src: k3sup-plan.json.j2
    dest: /tmp/k3sup-plan.json
    mode: "0644"
  run_once: true
  delegate_to: localhost
  become: false

# yamllint disable rule:line-length
- name: Plan k3s install
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      env | sort
      pwd
      k3sup plan /tmp/k3sup-plan.json \
        --context {{ k8s_context }} \
        --local-path $HOME/.kube/configs/{{ k8s_context }}-admin.yml \
        --server-k3s-extra-args "--disable=traefik --disable=servicelb --disable-kube-proxy --flannel-backend=none --embedded-registry" \
        --servers 3 \
        --tls-san {{ k8s_cluster_sans }} \
        --user {{ k8s_user_name }} \
        > /tmp/k3sup-install.sh
    executable: /bin/bash
  changed_when: false
  run_once: true
  delegate_to: localhost
  become: false

- name: Create k3s config directory
  ansible.builtin.file:
    path: /etc/rancher/k3s
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Create k3s config file
  ansible.builtin.template:
    src: k3s-config.yaml.j2
    dest: /etc/rancher/k3s/config.yaml
    mode: "0640"
    owner: root
    group: root

- name: Check if k3s is already installed using k3sup ready
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      k3sup ready --attempts=2 --kubeconfig $HOME/.kube/configs/{{ k8s_context }}-admin.yml --context {{ k8s_context }}
    executable: /bin/bash
  failed_when: false
  changed_when: false
  run_once: true
  delegate_to: localhost
  become: false
  register: k3s_ready
  tags:
    - k3s-ready

- name: Install k3s
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      env | sort
      pwd
      bash /tmp/k3sup-install.sh | tee /tmp/k3sup-install.log
    creates: "/Users/sean/.kube/configs/tpi-beta-admin.yml"
    executable: /bin/bash
  tags:
    - k3s-install
  run_once: true
  delegate_to: localhost
  become: false
  when: "'All node(s) are ready' not in k3s_ready.stdout"

- name: Install Gateway API CRDs
  ansible.builtin.shell:
    cmd: |
      export KUBECONFIG=$HOME/.kube/configs/{{ k8s_context }}-admin.yml
      kubectl apply -k {{ role_path }}/files/gateway-api-setup
  become: false
  run_once: true
  delegate_to: localhost
  changed_when: false
  tags:
    - k8s-gateway-api

- name: Install Cilium
  ansible.builtin.import_tasks: cilium.yml
  tags:
    - k8s-cilium

- name: Install cert-manager
  ansible.builtin.import_tasks: cert-manager.yml
  tags:
    - k8s-cert-manager

- name: Load k8s server certificate
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      export KUBECONFIG=$HOME/.kube/configs/{{ k8s_context }}-admin.yml
      cat $KUBECONFIG | yq -r '.clusters[0].cluster.certificate-authority-data'|base64 -d
    executable: /bin/bash
  tags:
    - k8s-server-certificate
    - k8s-server-api
  changed_when: false
  run_once: true
  delegate_to: localhost
  become: false
  register: k3s_server_certificate

- name: Edit local kube config to set the server to the api lb
  ansible.builtin.lineinfile:
    state: present
    path: /Users/sean/.kube/configs/{{ k8s_context }}-admin.yml
    regexp: '^(\s*)server: https://.*$'
    line: '\1server: https://{{ k8s_cluster_endpoint_name }}:6443'
    backrefs: true
  run_once: true
  delegate_to: localhost
  become: false
  tags:
    - k8s-server-api-lb

- name: Create CSI snapshot controller
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      export KUBECONFIG=$HOME/.kube/configs/{{ k8s_context }}-admin.yml
      kubectl apply -k {{ role_path }}/files/csi-snapshot-setup
    executable: /bin/bash
  run_once: true
  delegate_to: localhost
  become: false
  changed_when: false
  tags:
    - k8s-csi-snapshot-controller

- name: Install Longhorn
  ansible.builtin.import_tasks: longhorn.yml
  tags:
    - k8s-longhorn
