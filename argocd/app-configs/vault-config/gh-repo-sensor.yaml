apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: vault-config-gh-repo-sensor
  namespace: argo-events
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-event-source
      eventSourceName: github
      eventName: fzymgc-house
      filters:
        data:
          - path: headers.X-Github-Event
            type: string
            value:
              - push
              - create
          - path: body.ref
            type: string
            value:
              - refs/heads/main
          - path: body.repository.name
            type: string
            value:
              - selfhosted-cluster
        script: |
          // Define your path prefix here
          const TARGET_PATH_PREFIX = "tf/vault/";
          
          // Function to check if any file in a commit matches the path prefix
          function hasMatchingFiles(commit) {
            const allFiles = [
              ...(commit.added || []),
              ...(commit.removed || []),
              ...(commit.modified || [])
            ];
            
            return allFiles.some(file => file.startsWith(TARGET_PATH_PREFIX));
          }
          
          // Main filter logic
          function filter(event) {
            try {
              // Parse the event data
              const payload = JSON.parse(event.data);
              
              // Check if this is a push event with commits
              if (!payload.commits || !Array.isArray(payload.commits)) {
                return false;
              }
              
              // Return true if any commit has files matching the path prefix
              return payload.commits.some(commit => hasMatchingFiles(commit));
              
            } catch (error) {
              console.error("Error parsing event:", error);
              return false;
            }
          }
          
          // Execute the filter
          filter(event);
  triggers:
    - template:
        name: vault-config-trigger
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-vault-config-tf-
                namespace: vault
              spec:
                entrypoint: terraform-deployment
                workflowTemplateRef:
                  name: vault-config-tf-template
                arguments:
                  parameters:
                    - name: branch
                      value: "main"
                    - name: workspace
                      value: "main-cluster-vault"
                    - name: tf_path
                      value: "tf/vault"
      