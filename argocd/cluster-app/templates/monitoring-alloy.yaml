apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring-alloy
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: observability
  sources:
    - chart: alloy
      repoURL: https://grafana.github.io/helm-charts
      targetRevision: 1.2.1
      helm:
        releaseName: alloy
        valuesObject:
          rbac:
            create: true
            extraRules:
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["get", "list", "watch"]
          alloy:
            configMap:
              create: true
              content: |
                // Kubernetes discovery targets
                discovery.kubernetes "nodes" {
                  role = "node"
                }
                discovery.kubernetes "pods" {
                  role = "pod"
                }

                // Stream pod logs using the Kubernetes API
                loki.source.kubernetes "pods" {
                  targets    = discovery.kubernetes.pods.targets
                  forward_to = [loki.process.pods.receiver]
                }

                // Optional: collect Kubernetes events
                loki.source.kubernetes_events "events" {
                  job_name   = "kubernetes-events"
                  log_format = "json"
                  forward_to = [loki.process.events.receiver]
                }

                // Normalize, drop noise, and enrich labels for pod logs
                loki.process "pods" {
                  stage.static_labels {
                    values = {
                      cluster = "main"
                      job     = "kubernetes-pods"
                    }
                  }
                  // Example noise reduction (tune to your needs)
                  stage.drop {
                    expression = "namespace == 'kube-system' and (container == 'kube-proxy' or container == 'kube-scheduler' or container == 'kube-controller-manager')"
                  }
                  forward_to = [loki.write.default.receiver]
                }

                // Normalize and enrich labels for events
                loki.process "events" {
                  stage.static_labels {
                    values = {
                      cluster = "main"
                      job     = "kubernetes-events"
                    }
                  }
                  forward_to = [loki.write.default.receiver]
                }

                // Ship to Loki
                loki.write "default" {
                  endpoint {
                    url = "http://loki-gateway.monitoring.svc.cluster.local/loki/api/v1/push"
                  }
                }
          controller:
            type: daemonset
            tolerations:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
                effect: NoSchedule
            resources:
              requests:
                cpu: 100m
                memory: 200Mi
              limits:
                cpu: 500m
                memory: 400Mi
    - repoURL: https://github.com/fzymgc-house/selfhosted-cluster
      targetRevision: HEAD
      path: argocd/app-configs/monitoring-alloy
  destination:
    server: https://kubernetes.default.svc
    namespace: alloy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
      - RespectIgnoreDifferences=true


