apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: authentik-server-env
  namespace: authentik
spec:
  refreshPolicy: Periodic
  refreshInterval: 1m
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  target:
    name: authentik-server-env
    creationPolicy: Owner
    template:
      data:
        AUTHENTIK_SECRET_KEY: "{{ .authentik_secret_key }}"
        AUTHENTIK_POSTGRESQL__USER: "{{ .postgres_user }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: "{{ .postgres_password }}"
        AUTHENTIK_REDIS__PASSWORD: "{{ .valkey_password }}"
  data:
    - secretKey: "authentik_secret_key"
      remoteRef:
        key: fzymgc-house/cluster/authentik
        property: secret_key
    - secretKey: "postgres_user"
      remoteRef:
        key: fzymgc-house/cluster/postgres/users/main-authentik
        property: username
    - secretKey: "postgres_password"
      remoteRef:
        key: fzymgc-house/cluster/postgres/users/main-authentik
        property: password
    - secretKey: valkey_password
      remoteRef:
        key: fzymgc-house/cluster/valkey
        property: password
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: authentik-tf-secrets
  namespace: vault
spec:
  refreshPolicy: Periodic
  refreshInterval: 1m
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  target:
    name: authentik-tf-secrets
    creationPolicy: Owner
    template:
      data:
        TF_VAR_authentik_client_id: "{{ .vault_authentik_client_id }}"
        TF_VAR_authentik_client_secret: "{{ .vault_authentik_client_secret }}"
  data:
    - secretKey: "vault_authentik_client_id"
      remoteRef:
        key: fzymgc-house/cluster/authentik
        property: vault_oidc_client_id
    - secretKey: "vault_authentik_client_secret"
      remoteRef:
        key: fzymgc-house/cluster/authentik
        property: vault_oidc_client_secret
