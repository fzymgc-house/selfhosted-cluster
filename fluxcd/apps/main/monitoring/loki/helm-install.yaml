apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki-distributed
  namespace: monitoring
spec:
  interval: 10m
  chart:
    spec:
      chart: loki-distributed
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    loki:
      auth_enabled: false
      storage:
        type: s3
        bucketNames:
          chunks: $(S3_BUCKET)
          ruler: $(S3_BUCKET)
          admin: $(S3_BUCKET)
        s3:
          s3ForcePathStyle: true
          insecure: false
          s3: $(S3_ENDPOINT)
          endpoint: $(S3_ENDPOINT)
          region: $(S3_REGION)
          accessKeyId: $(S3_ACCESS_KEY)
          secretAccessKey: $(S3_SECRET_KEY)
          objectPrefix: loki/
      schemaConfig:
        configs:
          - from: 2024-01-01
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      compactor:
        working_directory: /var/loki/compactor
        shared_store: s3
      limits_config:
        retention_period: 336h # 14d
    chunksCache:
      allocatedMemory: 1024
    ingester:
      replicas: 3
      persistence:
        enabled: true
        storageClass: longhorn
        size: 10Gi
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: 1
          memory: 1Gi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values: ["ingester"]
              topologyKey: kubernetes.io/hostname
    querier:
      replicas: 3
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: 1
          memory: 1Gi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values: ["querier"]
              topologyKey: kubernetes.io/hostname
    queryFrontend:
      replicas: 3
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 512Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values: ["query-frontend"]
              topologyKey: kubernetes.io/hostname
    distributor:
      replicas: 3
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 512Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values: ["distributor"]
              topologyKey: kubernetes.io/hostname
    ruler:
      enabled: true
      replicas: 2
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 512Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values: ["ruler"]
              topologyKey: kubernetes.io/hostname
    gateway:
      enabled: true
      replicas: 2
      resources:
        requests:
          cpu: 50m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values: ["gateway"]
              topologyKey: kubernetes.io/hostname
    pdb:
      create: true
      minAvailable: 1
  valuesFrom:
    - kind: Secret
      name: loki-s3
      valuesKey: S3_BUCKET
      targetPath: loki.storage.bucketNames.chunks
    - kind: Secret
      name: loki-s3
      valuesKey: S3_BUCKET
      targetPath: loki.storage.bucketNames.ruler
    - kind: Secret
      name: loki-s3
      valuesKey: S3_BUCKET
      targetPath: loki.storage.bucketNames.admin
    - kind: Secret
      name: loki-s3
      valuesKey: S3_ENDPOINT
      targetPath: loki.storage.s3.endpoint
    - kind: Secret
      name: loki-s3
      valuesKey: S3_REGION
      targetPath: loki.storage.s3.region
    - kind: Secret
      name: loki-s3
      valuesKey: S3_ACCESS_KEY
      targetPath: loki.storage.s3.accessKeyId
    - kind: Secret
      name: loki-s3
      valuesKey: S3_SECRET_KEY
      targetPath: loki.storage.s3.secretAccessKey
