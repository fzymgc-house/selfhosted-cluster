apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: vault
spec:
  releaseName: vault
  chart:
    name: vault
    version: 0.30.0
    sourceRef:
      kind: HelmRepository
      name: hashicorp
      namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    global:
      tlsDisable: false
    server:
      # https://github.com/hashicorp/vault-helm/blob/main/values.yaml#L100
      # For HA configuration and because we need to manually init the vault,
      # we need to define custom readiness/liveness Probe settings
      readinessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
      livenessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true"
        initialDelaySeconds: 120

      extraEnvironmentVars:
        VAULT_CACERT: "/vault/userconfig/vault-api-tls/ca.crt"
        VAULT_TLSCERT: "/vault/userconfig/vault-api-tls/tls.crt"
        VAULT_TLSKEY: "/vault/userconfig/vault-api-tls/tls.key"

      extraVolumes:
        - name: vault-api-tls
          type: secret

      dataStorage:
        storageClass: longhorn-encrypted

      auditStorage:
        enabled: true
        storageClass: longhorn

      standalone:
        enabled: false

      ha:
        enabled: true
        replicas: 3
        apiAddr: "https://vault-active.vault-internal:8200"

        raft:
          enabled: true
          setNodeId: true

          config: |
            ui = true
            cluster_name = "fzymgc-house"

            listener "tcp" {
              address = "[::]:8200"
              cluster_address = "[::]:8201"
              tls_cert_file = "/vault/userconfig/vault-api-tls/tls.crt"
              tls_key_file = "/vault/userconfig/vault-api-tls/tls.key"
            }

            service_registration "kubernetes" {}

            storage "raft" {
              path = "/vault/data"
              retry_join {
                leader_api_addr = "https://vault-0.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/vault-api-tls/ca.crt"
                leader_client_cert_file = "/vault/userconfig/vault-api-tls/tls.crt"
                leader_client_key_file = "/vault/userconfig/vault-api-tls/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-1.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/vault-api-tls/ca.crt"
                leader_client_cert_file = "/vault/userconfig/vault-api-tls/tls.crt"
                leader_client_key_file = "/vault/userconfig/vault-api-tls/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-2.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/vault-api-tls/ca.crt"
                leader_client_cert_file = "/vault/userconfig/vault-api-tls/tls.crt"
                leader_client_key_file = "/vault/userconfig/vault-api-tls/tls.key"
              }
            }
      ingress:
        enabled: false
        # annotations:
        #   cert-manager.io/cluster-issuer: "fzymgc-house-issuer"
        #   cert-manager.io/private-key-size: "4096"
        # hosts:
        #   - host: vault.fzymgc.house
        #     paths: []
        # tls:
        #   - hosts:
        #       - vault.fzymgc.house
        #     secretName: vault-ingress-api-tls
      networkPolicy:
        enabled: true
      includeConfigAnnotation: true

    ui:
      enabled: true
      serviceType: "ClusterIP"
